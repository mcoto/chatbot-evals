version: "3.9"

name: chatbot-eval-lab

services:
  db:
    image: postgres:16-alpine
    container_name: gt-db
    environment:
      POSTGRES_DB: ${DB_NAME:-groundtruth}
      POSTGRES_USER: ${DB_USER:-gtuser}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-gtpass}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./services/groundtruth-db/init:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20

  qdrant:
    image: qdrant/qdrant:latest
    container_name: rag-qdrant
    volumes:
      - qdrant_storage:/qdrant/storage
    ports:
      - "6333:6333"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:6333/readyz"]
      interval: 5s
      timeout: 3s
      retries: 20

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    volumes:
      - ollama_models:/root/.ollama
    ports:
      - "11434:11434"
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:11434/api/tags"]
      interval: 5s
      timeout: 3s
      retries: 20

  # --- Ground truth APIs (microservicios) ---
  orders-api:
    build:
      context: ./services/orders-api
    container_name: orders-api
    environment:
      DATABASE_URL: postgresql+psycopg://$DB_USER:$DB_PASSWORD@db:5432/$DB_NAME
      SERVICE_NAME: orders
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "7001:8000"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8000/health"]
      interval: 5s
      timeout: 3s
      retries: 20

  billing-api:
    build:
      context: ./services/billing-api
    container_name: billing-api
    environment:
      DATABASE_URL: postgresql+psycopg://$DB_USER:$DB_PASSWORD@db:5432/$DB_NAME
      SERVICE_NAME: billing
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "7002:8000"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8000/health"]
      interval: 5s
      timeout: 3s
      retries: 20

  inventory-api:
    build:
      context: ./services/inventory-api
    container_name: inventory-api
    environment:
      DATABASE_URL: postgresql+psycopg://$DB_USER:$DB_PASSWORD@db:5432/$DB_NAME
      SERVICE_NAME: inventory
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "7003:8000"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8000/health"]
      interval: 5s
      timeout: 3s
      retries: 20

  policy-api:
    build:
      context: ./services/policy-api
    container_name: policy-api
    environment:
      DATABASE_URL: postgresql+psycopg://$DB_USER:$DB_PASSWORD@db:5432/$DB_NAME
      SERVICE_NAME: policy
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "7004:8000"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8000/health"]
      interval: 5s
      timeout: 3s
      retries: 20

  # --- Chatbot (FastAPI + RAG + Tools) ---
  chatbot:
    build:
      context: ./apps/chatbot
    container_name: chatbot
    environment:
      OLLAMA_BASE_URL: http://ollama:11434
      MODEL_ID: ${MODEL_ID:-llama3.1:8b}
      QDRANT_URL: http://qdrant:6333
      DATABASE_URL: postgresql+psycopg://$DB_USER:$DB_PASSWORD@db:5432/$DB_NAME
      ORDERS_API_URL: http://orders-api:8000
      BILLING_API_URL: http://billing-api:8000
      INVENTORY_API_URL: http://inventory-api:8000
      POLICY_API_URL: http://policy-api:8000
      RAG_COLLECTION: ${RAG_COLLECTION:-docs}
    depends_on:
      db:
        condition: service_healthy
      qdrant:
        condition: service_healthy
      ollama:
        condition: service_healthy
      orders-api:
        condition: service_healthy
      billing-api:
        condition: service_healthy
      inventory-api:
        condition: service_healthy
      policy-api:
        condition: service_healthy
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8000/health"]
      interval: 5s
      timeout: 3s
      retries: 20

  # --- UI de evaluaci√≥n (Streamlit) ---
  ui:
    build:
      context: ./ui
    container_name: eval-ui
    environment:
      CHATBOT_BASE_URL: http://chatbot:8000
      LANGFUSE_ENABLED: ${LANGFUSE_ENABLED:-false}
    depends_on:
      chatbot:
        condition: service_healthy
    ports:
      - "8501:8501"

volumes:
  pgdata:
  qdrant_storage:
  ollama_models:

